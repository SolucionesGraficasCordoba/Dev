'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SOLUCIONES_INTERNAS")>  _
Partial Public Class DataS_Interno
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub UpdateVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub DeleteVENDEDOR(instance As VENDEDOR)
    End Sub
  Partial Private Sub InsertCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub UpdateCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub DeleteCOLABORADOR(instance As COLABORADOR)
    End Sub
  Partial Private Sub InsertPIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub UpdatePIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub DeletePIEZA(instance As PIEZA)
    End Sub
  Partial Private Sub InsertRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub UpdateRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub DeleteRE_TRABAJO(instance As RE_TRABAJO)
    End Sub
  Partial Private Sub InsertSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub UpdateSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub DeleteSECTOR(instance As SECTOR)
    End Sub
  Partial Private Sub InsertTAREA(instance As TAREA)
    End Sub
  Partial Private Sub UpdateTAREA(instance As TAREA)
    End Sub
  Partial Private Sub DeleteTAREA(instance As TAREA)
    End Sub
  Partial Private Sub InsertUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub UpdateUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub DeleteUSUARIO(instance As USUARIO)
    End Sub
  Partial Private Sub InsertCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub UpdateCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub DeleteCLIENTE(instance As CLIENTE)
    End Sub
  Partial Private Sub InsertDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub UpdateDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub DeleteDETALLE_ORDEN_TRABAJO(instance As DETALLE_ORDEN_TRABAJO)
    End Sub
  Partial Private Sub InsertPRODUCTO(instance As PRODUCTO)
    End Sub
  Partial Private Sub UpdatePRODUCTO(instance As PRODUCTO)
    End Sub
  Partial Private Sub DeletePRODUCTO(instance As PRODUCTO)
    End Sub
  Partial Private Sub InsertPRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub UpdatePRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub DeletePRODUCTO_MOVIMIENTO(instance As PRODUCTO_MOVIMIENTO)
    End Sub
  Partial Private Sub InsertPROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub UpdatePROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub DeletePROCESO(instance As PROCESO)
    End Sub
  Partial Private Sub InsertORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  Partial Private Sub UpdateORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  Partial Private Sub DeleteORDEN_TRABAJO(instance As ORDEN_TRABAJO)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SOLUCIONES_INTERNAS.My.MySettings.Default.SOLUCIONES_INTERNASConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property VENDEDOR() As System.Data.Linq.Table(Of VENDEDOR)
		Get
			Return Me.GetTable(Of VENDEDOR)
		End Get
	End Property
	
	Public ReadOnly Property COLABORADOR() As System.Data.Linq.Table(Of COLABORADOR)
		Get
			Return Me.GetTable(Of COLABORADOR)
		End Get
	End Property
	
	Public ReadOnly Property PIEZA() As System.Data.Linq.Table(Of PIEZA)
		Get
			Return Me.GetTable(Of PIEZA)
		End Get
	End Property
	
	Public ReadOnly Property RE_TRABAJO() As System.Data.Linq.Table(Of RE_TRABAJO)
		Get
			Return Me.GetTable(Of RE_TRABAJO)
		End Get
	End Property
	
	Public ReadOnly Property SECTOR() As System.Data.Linq.Table(Of SECTOR)
		Get
			Return Me.GetTable(Of SECTOR)
		End Get
	End Property
	
	Public ReadOnly Property TAREA() As System.Data.Linq.Table(Of TAREA)
		Get
			Return Me.GetTable(Of TAREA)
		End Get
	End Property
	
	Public ReadOnly Property USUARIO() As System.Data.Linq.Table(Of USUARIO)
		Get
			Return Me.GetTable(Of USUARIO)
		End Get
	End Property
	
	Public ReadOnly Property CLIENTE() As System.Data.Linq.Table(Of CLIENTE)
		Get
			Return Me.GetTable(Of CLIENTE)
		End Get
	End Property
	
	Public ReadOnly Property DETALLE_ORDEN_TRABAJO() As System.Data.Linq.Table(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me.GetTable(Of DETALLE_ORDEN_TRABAJO)
		End Get
	End Property
	
	Public ReadOnly Property PRODUCTO() As System.Data.Linq.Table(Of PRODUCTO)
		Get
			Return Me.GetTable(Of PRODUCTO)
		End Get
	End Property
	
	Public ReadOnly Property PRODUCTO_MOVIMIENTO() As System.Data.Linq.Table(Of PRODUCTO_MOVIMIENTO)
		Get
			Return Me.GetTable(Of PRODUCTO_MOVIMIENTO)
		End Get
	End Property
	
	Public ReadOnly Property PROCESO() As System.Data.Linq.Table(Of PROCESO)
		Get
			Return Me.GetTable(Of PROCESO)
		End Get
	End Property
	
	Public ReadOnly Property ORDEN_TRABAJO() As System.Data.Linq.Table(Of ORDEN_TRABAJO)
		Get
			Return Me.GetTable(Of ORDEN_TRABAJO)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VENDEDOR")>  _
Partial Public Class VENDEDOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _VEN_id_vendedor As Integer
	
	Private _VEN_nombre_ven As String
	
	Private _VEN_apellido_ven As String
	
	Private _VEN_mail_ven As String
	
	Private _VEN_telefono_ven As String
	
	Private _ORDEN_TRABAJO As EntitySet(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanging(value As Integer)
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanged()
    End Sub
    Partial Private Sub OnVEN_nombre_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_nombre_venChanged()
    End Sub
    Partial Private Sub OnVEN_apellido_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_apellido_venChanged()
    End Sub
    Partial Private Sub OnVEN_mail_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_mail_venChanged()
    End Sub
    Partial Private Sub OnVEN_telefono_venChanging(value As String)
    End Sub
    Partial Private Sub OnVEN_telefono_venChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ORDEN_TRABAJO = New EntitySet(Of ORDEN_TRABAJO)(AddressOf Me.attach_ORDEN_TRABAJO, AddressOf Me.detach_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_id_vendedor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property VEN_id_vendedor() As Integer
		Get
			Return Me._VEN_id_vendedor
		End Get
		Set
			If ((Me._VEN_id_vendedor = value)  _
						= false) Then
				Me.OnVEN_id_vendedorChanging(value)
				Me.SendPropertyChanging
				Me._VEN_id_vendedor = value
				Me.SendPropertyChanged("VEN_id_vendedor")
				Me.OnVEN_id_vendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_nombre_ven", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property VEN_nombre_ven() As String
		Get
			Return Me._VEN_nombre_ven
		End Get
		Set
			If (String.Equals(Me._VEN_nombre_ven, value) = false) Then
				Me.OnVEN_nombre_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_nombre_ven = value
				Me.SendPropertyChanged("VEN_nombre_ven")
				Me.OnVEN_nombre_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_apellido_ven", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property VEN_apellido_ven() As String
		Get
			Return Me._VEN_apellido_ven
		End Get
		Set
			If (String.Equals(Me._VEN_apellido_ven, value) = false) Then
				Me.OnVEN_apellido_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_apellido_ven = value
				Me.SendPropertyChanged("VEN_apellido_ven")
				Me.OnVEN_apellido_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_mail_ven", DbType:="VarChar(50)")>  _
	Public Property VEN_mail_ven() As String
		Get
			Return Me._VEN_mail_ven
		End Get
		Set
			If (String.Equals(Me._VEN_mail_ven, value) = false) Then
				Me.OnVEN_mail_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_mail_ven = value
				Me.SendPropertyChanged("VEN_mail_ven")
				Me.OnVEN_mail_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_telefono_ven", DbType:="VarChar(15)")>  _
	Public Property VEN_telefono_ven() As String
		Get
			Return Me._VEN_telefono_ven
		End Get
		Set
			If (String.Equals(Me._VEN_telefono_ven, value) = false) Then
				Me.OnVEN_telefono_venChanging(value)
				Me.SendPropertyChanging
				Me._VEN_telefono_ven = value
				Me.SendPropertyChanged("VEN_telefono_ven")
				Me.OnVEN_telefono_venChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VENDEDOR_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="VEN_id_vendedor", OtherKey:="VEN_id_vendedor")>  _
	Public Property ORDEN_TRABAJO() As EntitySet(Of ORDEN_TRABAJO)
		Get
			Return Me._ORDEN_TRABAJO
		End Get
		Set
			Me._ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.VENDEDOR = Me
	End Sub
	
	Private Sub detach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.VENDEDOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COLABORADOR")>  _
Partial Public Class COLABORADOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COL_id_colaborador As Integer
	
	Private _COL_nombre_col As String
	
	Private _COL_apellido_col As String
	
	Private _SEC_id_sector As System.Nullable(Of Integer)
	
	Private _TAREA As EntitySet(Of TAREA)
	
	Private _USUARIO As EntitySet(Of USUARIO)
	
	Private _SECTOR As EntityRef(Of SECTOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    Partial Private Sub OnCOL_nombre_colChanging(value As String)
    End Sub
    Partial Private Sub OnCOL_nombre_colChanged()
    End Sub
    Partial Private Sub OnCOL_apellido_colChanging(value As String)
    End Sub
    Partial Private Sub OnCOL_apellido_colChanged()
    End Sub
    Partial Private Sub OnSEC_id_sectorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEC_id_sectorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TAREA = New EntitySet(Of TAREA)(AddressOf Me.attach_TAREA, AddressOf Me.detach_TAREA)
		Me._USUARIO = New EntitySet(Of USUARIO)(AddressOf Me.attach_USUARIO, AddressOf Me.detach_USUARIO)
		Me._SECTOR = CType(Nothing, EntityRef(Of SECTOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property COL_id_colaborador() As Integer
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If ((Me._COL_id_colaborador = value)  _
						= false) Then
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_nombre_col", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property COL_nombre_col() As String
		Get
			Return Me._COL_nombre_col
		End Get
		Set
			If (String.Equals(Me._COL_nombre_col, value) = false) Then
				Me.OnCOL_nombre_colChanging(value)
				Me.SendPropertyChanging
				Me._COL_nombre_col = value
				Me.SendPropertyChanged("COL_nombre_col")
				Me.OnCOL_nombre_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_apellido_col", DbType:="VarChar(50)")>  _
	Public Property COL_apellido_col() As String
		Get
			Return Me._COL_apellido_col
		End Get
		Set
			If (String.Equals(Me._COL_apellido_col, value) = false) Then
				Me.OnCOL_apellido_colChanging(value)
				Me.SendPropertyChanging
				Me._COL_apellido_col = value
				Me.SendPropertyChanged("COL_apellido_col")
				Me.OnCOL_apellido_colChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_id_sector", DbType:="Int")>  _
	Public Property SEC_id_sector() As System.Nullable(Of Integer)
		Get
			Return Me._SEC_id_sector
		End Get
		Set
			If (Me._SEC_id_sector.Equals(value) = false) Then
				If Me._SECTOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSEC_id_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_id_sector = value
				Me.SendPropertyChanged("SEC_id_sector")
				Me.OnSEC_id_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_TAREA", Storage:="_TAREA", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador")>  _
	Public Property TAREA() As EntitySet(Of TAREA)
		Get
			Return Me._TAREA
		End Get
		Set
			Me._TAREA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_USUARIO", Storage:="_USUARIO", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador")>  _
	Public Property USUARIO() As EntitySet(Of USUARIO)
		Get
			Return Me._USUARIO
		End Get
		Set
			Me._USUARIO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SECTOR_COLABORADOR", Storage:="_SECTOR", ThisKey:="SEC_id_sector", OtherKey:="SEC_id_sector", IsForeignKey:=true)>  _
	Public Property SECTOR() As SECTOR
		Get
			Return Me._SECTOR.Entity
		End Get
		Set
			Dim previousValue As SECTOR = Me._SECTOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SECTOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SECTOR.Entity = Nothing
					previousValue.COLABORADOR.Remove(Me)
				End If
				Me._SECTOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.COLABORADOR.Add(Me)
					Me._SEC_id_sector = value.SEC_id_sector
				Else
					Me._SEC_id_sector = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SECTOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.COLABORADOR = Me
	End Sub
	
	Private Sub detach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.COLABORADOR = Nothing
	End Sub
	
	Private Sub attach_USUARIO(ByVal entity As USUARIO)
		Me.SendPropertyChanging
		entity.COLABORADOR = Me
	End Sub
	
	Private Sub detach_USUARIO(ByVal entity As USUARIO)
		Me.SendPropertyChanging
		entity.COLABORADOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PIEZA")>  _
Partial Public Class PIEZA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PIE_id_pieza As Integer
	
	Private _PIE_nombre_pie As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntitySet(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPIE_id_piezaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIE_id_piezaChanged()
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanging(value As String)
    End Sub
    Partial Private Sub OnPIE_nombre_pieChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = New EntitySet(Of DETALLE_ORDEN_TRABAJO)(AddressOf Me.attach_DETALLE_ORDEN_TRABAJO, AddressOf Me.detach_DETALLE_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PIE_id_pieza() As Integer
		Get
			Return Me._PIE_id_pieza
		End Get
		Set
			If ((Me._PIE_id_pieza = value)  _
						= false) Then
				Me.OnPIE_id_piezaChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza = value
				Me.SendPropertyChanged("PIE_id_pieza")
				Me.OnPIE_id_piezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_nombre_pie", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PIE_nombre_pie() As String
		Get
			Return Me._PIE_nombre_pie
		End Get
		Set
			If (String.Equals(Me._PIE_nombre_pie, value) = false) Then
				Me.OnPIE_nombre_pieChanging(value)
				Me.SendPropertyChanging
				Me._PIE_nombre_pie = value
				Me.SendPropertyChanged("PIE_nombre_pie")
				Me.OnPIE_nombre_pieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA_DETALLE_ORDEN_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="PIE_id_pieza", OtherKey:="PIE_id_pieza")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As EntitySet(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me._DETALLE_ORDEN_TRABAJO
		End Get
		Set
			Me._DETALLE_ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA = Me
	End Sub
	
	Private Sub detach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.PIEZA = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[RE-TRABAJO]")>  _
Partial Public Class RE_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RET_id_retrabajo As Integer
	
	Private _id_detalle_orden_trabajo As System.Nullable(Of Integer)
	
	Private _RET_cantidad_dort As System.Nullable(Of Integer)
	
	Private _RET_tamaño_dort As String
	
	Private _RET_tipo_impresion_dort As String
	
	Private _RET_origen_area As String
	
	Private _RET_procedimiento As String
	
	Private _RET_fecha As System.Nullable(Of Date)
	
	Private _RET_papel_soporte_1 As String
	
	Private _RET_papel_soporte_2 As String
	
	Private _RET_papel_soporte_3 As String
	
	Private _RET_gramaje_soporte_1 As System.Nullable(Of Integer)
	
	Private _RET_gramaje_soporte_2 As String
	
	Private _RET_gramaje_soporte_3 As String
	
	Private _RET_cantidad_soporte_1 As System.Nullable(Of Integer)
	
	Private _RET_cantidad_soporte_2 As System.Nullable(Of Integer)
	
	Private _RET_cantidad_soporte_3 As System.Nullable(Of Integer)
	
	Private _RET_formato_soporte_1 As String
	
	Private _RET_formato_soporte_2 As String
	
	Private _RET_formato_soporte_3 As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntityRef(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRET_id_retrabajoChanging(value As Integer)
    End Sub
    Partial Private Sub OnRET_id_retrabajoChanged()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnRET_cantidad_dortChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_dortChanged()
    End Sub
    Partial Private Sub OnRET_tamaño_dortChanging(value As String)
    End Sub
    Partial Private Sub OnRET_tamaño_dortChanged()
    End Sub
    Partial Private Sub OnRET_tipo_impresion_dortChanging(value As String)
    End Sub
    Partial Private Sub OnRET_tipo_impresion_dortChanged()
    End Sub
    Partial Private Sub OnRET_origen_areaChanging(value As String)
    End Sub
    Partial Private Sub OnRET_origen_areaChanged()
    End Sub
    Partial Private Sub OnRET_procedimientoChanging(value As String)
    End Sub
    Partial Private Sub OnRET_procedimientoChanged()
    End Sub
    Partial Private Sub OnRET_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRET_fechaChanged()
    End Sub
    Partial Private Sub OnRET_papel_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_1Changed()
    End Sub
    Partial Private Sub OnRET_papel_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_2Changed()
    End Sub
    Partial Private Sub OnRET_papel_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnRET_papel_soporte_3Changed()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_1Changed()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_2Changed()
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnRET_gramaje_soporte_3Changed()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_1Changed()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_2Changed()
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRET_cantidad_soporte_3Changed()
    End Sub
    Partial Private Sub OnRET_formato_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_1Changed()
    End Sub
    Partial Private Sub OnRET_formato_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_2Changed()
    End Sub
    Partial Private Sub OnRET_formato_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnRET_formato_soporte_3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = CType(Nothing, EntityRef(Of DETALLE_ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_id_retrabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RET_id_retrabajo() As Integer
		Get
			Return Me._RET_id_retrabajo
		End Get
		Set
			If ((Me._RET_id_retrabajo = value)  _
						= false) Then
				Me.OnRET_id_retrabajoChanging(value)
				Me.SendPropertyChanging
				Me._RET_id_retrabajo = value
				Me.SendPropertyChanged("RET_id_retrabajo")
				Me.OnRET_id_retrabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", DbType:="Int")>  _
	Public Property id_detalle_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If (Me._id_detalle_orden_trabajo.Equals(value) = false) Then
				If Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_dort", DbType:="Int")>  _
	Public Property RET_cantidad_dort() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_dort
		End Get
		Set
			If (Me._RET_cantidad_dort.Equals(value) = false) Then
				Me.OnRET_cantidad_dortChanging(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_dort = value
				Me.SendPropertyChanged("RET_cantidad_dort")
				Me.OnRET_cantidad_dortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_tamaño_dort", DbType:="VarChar(50)")>  _
	Public Property RET_tamaño_dort() As String
		Get
			Return Me._RET_tamaño_dort
		End Get
		Set
			If (String.Equals(Me._RET_tamaño_dort, value) = false) Then
				Me.OnRET_tamaño_dortChanging(value)
				Me.SendPropertyChanging
				Me._RET_tamaño_dort = value
				Me.SendPropertyChanged("RET_tamaño_dort")
				Me.OnRET_tamaño_dortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_tipo_impresion_dort", DbType:="VarChar(4)")>  _
	Public Property RET_tipo_impresion_dort() As String
		Get
			Return Me._RET_tipo_impresion_dort
		End Get
		Set
			If (String.Equals(Me._RET_tipo_impresion_dort, value) = false) Then
				Me.OnRET_tipo_impresion_dortChanging(value)
				Me.SendPropertyChanging
				Me._RET_tipo_impresion_dort = value
				Me.SendPropertyChanged("RET_tipo_impresion_dort")
				Me.OnRET_tipo_impresion_dortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_origen_area", DbType:="VarChar(100)")>  _
	Public Property RET_origen_area() As String
		Get
			Return Me._RET_origen_area
		End Get
		Set
			If (String.Equals(Me._RET_origen_area, value) = false) Then
				Me.OnRET_origen_areaChanging(value)
				Me.SendPropertyChanging
				Me._RET_origen_area = value
				Me.SendPropertyChanged("RET_origen_area")
				Me.OnRET_origen_areaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_procedimiento", DbType:="VarChar(100)")>  _
	Public Property RET_procedimiento() As String
		Get
			Return Me._RET_procedimiento
		End Get
		Set
			If (String.Equals(Me._RET_procedimiento, value) = false) Then
				Me.OnRET_procedimientoChanging(value)
				Me.SendPropertyChanging
				Me._RET_procedimiento = value
				Me.SendPropertyChanged("RET_procedimiento")
				Me.OnRET_procedimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_fecha", DbType:="Date")>  _
	Public Property RET_fecha() As System.Nullable(Of Date)
		Get
			Return Me._RET_fecha
		End Get
		Set
			If (Me._RET_fecha.Equals(value) = false) Then
				Me.OnRET_fechaChanging(value)
				Me.SendPropertyChanging
				Me._RET_fecha = value
				Me.SendPropertyChanged("RET_fecha")
				Me.OnRET_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_1", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_1() As String
		Get
			Return Me._RET_papel_soporte_1
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_1, value) = false) Then
				Me.OnRET_papel_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_1 = value
				Me.SendPropertyChanged("RET_papel_soporte_1")
				Me.OnRET_papel_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_2", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_2() As String
		Get
			Return Me._RET_papel_soporte_2
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_2, value) = false) Then
				Me.OnRET_papel_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_2 = value
				Me.SendPropertyChanged("RET_papel_soporte_2")
				Me.OnRET_papel_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_papel_soporte_3", DbType:="VarChar(50)")>  _
	Public Property RET_papel_soporte_3() As String
		Get
			Return Me._RET_papel_soporte_3
		End Get
		Set
			If (String.Equals(Me._RET_papel_soporte_3, value) = false) Then
				Me.OnRET_papel_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._RET_papel_soporte_3 = value
				Me.SendPropertyChanged("RET_papel_soporte_3")
				Me.OnRET_papel_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_1", DbType:="Int")>  _
	Public Property RET_gramaje_soporte_1() As System.Nullable(Of Integer)
		Get
			Return Me._RET_gramaje_soporte_1
		End Get
		Set
			If (Me._RET_gramaje_soporte_1.Equals(value) = false) Then
				Me.OnRET_gramaje_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_1 = value
				Me.SendPropertyChanged("RET_gramaje_soporte_1")
				Me.OnRET_gramaje_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_2", DbType:="VarChar(50)")>  _
	Public Property RET_gramaje_soporte_2() As String
		Get
			Return Me._RET_gramaje_soporte_2
		End Get
		Set
			If (String.Equals(Me._RET_gramaje_soporte_2, value) = false) Then
				Me.OnRET_gramaje_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_2 = value
				Me.SendPropertyChanged("RET_gramaje_soporte_2")
				Me.OnRET_gramaje_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_gramaje_soporte_3", DbType:="VarChar(50)")>  _
	Public Property RET_gramaje_soporte_3() As String
		Get
			Return Me._RET_gramaje_soporte_3
		End Get
		Set
			If (String.Equals(Me._RET_gramaje_soporte_3, value) = false) Then
				Me.OnRET_gramaje_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._RET_gramaje_soporte_3 = value
				Me.SendPropertyChanged("RET_gramaje_soporte_3")
				Me.OnRET_gramaje_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_1", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_1() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_1
		End Get
		Set
			If (Me._RET_cantidad_soporte_1.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_1 = value
				Me.SendPropertyChanged("RET_cantidad_soporte_1")
				Me.OnRET_cantidad_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_2", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_2() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_2
		End Get
		Set
			If (Me._RET_cantidad_soporte_2.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_2 = value
				Me.SendPropertyChanged("RET_cantidad_soporte_2")
				Me.OnRET_cantidad_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_cantidad_soporte_3", DbType:="Int")>  _
	Public Property RET_cantidad_soporte_3() As System.Nullable(Of Integer)
		Get
			Return Me._RET_cantidad_soporte_3
		End Get
		Set
			If (Me._RET_cantidad_soporte_3.Equals(value) = false) Then
				Me.OnRET_cantidad_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._RET_cantidad_soporte_3 = value
				Me.SendPropertyChanged("RET_cantidad_soporte_3")
				Me.OnRET_cantidad_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_1", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_1() As String
		Get
			Return Me._RET_formato_soporte_1
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_1, value) = false) Then
				Me.OnRET_formato_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_1 = value
				Me.SendPropertyChanged("RET_formato_soporte_1")
				Me.OnRET_formato_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_2", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_2() As String
		Get
			Return Me._RET_formato_soporte_2
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_2, value) = false) Then
				Me.OnRET_formato_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_2 = value
				Me.SendPropertyChanged("RET_formato_soporte_2")
				Me.OnRET_formato_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RET_formato_soporte_3", DbType:="VarChar(15)")>  _
	Public Property RET_formato_soporte_3() As String
		Get
			Return Me._RET_formato_soporte_3
		End Get
		Set
			If (String.Equals(Me._RET_formato_soporte_3, value) = false) Then
				Me.OnRET_formato_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._RET_formato_soporte_3 = value
				Me.SendPropertyChanged("RET_formato_soporte_3")
				Me.OnRET_formato_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_RE_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo", IsForeignKey:=true)>  _
	Public Property DETALLE_ORDEN_TRABAJO() As DETALLE_ORDEN_TRABAJO
		Get
			Return Me._DETALLE_ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As DETALLE_ORDEN_TRABAJO = Me._DETALLE_ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._DETALLE_ORDEN_TRABAJO.Entity = Nothing
					previousValue.RE_TRABAJO.Remove(Me)
				End If
				Me._DETALLE_ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RE_TRABAJO.Add(Me)
					Me._id_detalle_orden_trabajo = value.id_detalle_orden_trabajo
				Else
					Me._id_detalle_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("DETALLE_ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SECTOR")>  _
Partial Public Class SECTOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SEC_id_sector As Integer
	
	Private _SEC_nombre_sector As String
	
	Private _COLABORADOR As EntitySet(Of COLABORADOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSEC_id_sectorChanging(value As Integer)
    End Sub
    Partial Private Sub OnSEC_id_sectorChanged()
    End Sub
    Partial Private Sub OnSEC_nombre_sectorChanging(value As String)
    End Sub
    Partial Private Sub OnSEC_nombre_sectorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COLABORADOR = New EntitySet(Of COLABORADOR)(AddressOf Me.attach_COLABORADOR, AddressOf Me.detach_COLABORADOR)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_id_sector", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property SEC_id_sector() As Integer
		Get
			Return Me._SEC_id_sector
		End Get
		Set
			If ((Me._SEC_id_sector = value)  _
						= false) Then
				Me.OnSEC_id_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_id_sector = value
				Me.SendPropertyChanged("SEC_id_sector")
				Me.OnSEC_id_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEC_nombre_sector", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property SEC_nombre_sector() As String
		Get
			Return Me._SEC_nombre_sector
		End Get
		Set
			If (String.Equals(Me._SEC_nombre_sector, value) = false) Then
				Me.OnSEC_nombre_sectorChanging(value)
				Me.SendPropertyChanging
				Me._SEC_nombre_sector = value
				Me.SendPropertyChanged("SEC_nombre_sector")
				Me.OnSEC_nombre_sectorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SECTOR_COLABORADOR", Storage:="_COLABORADOR", ThisKey:="SEC_id_sector", OtherKey:="SEC_id_sector")>  _
	Public Property COLABORADOR() As EntitySet(Of COLABORADOR)
		Get
			Return Me._COLABORADOR
		End Get
		Set
			Me._COLABORADOR.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_COLABORADOR(ByVal entity As COLABORADOR)
		Me.SendPropertyChanging
		entity.SECTOR = Me
	End Sub
	
	Private Sub detach_COLABORADOR(ByVal entity As COLABORADOR)
		Me.SendPropertyChanging
		entity.SECTOR = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TAREA")>  _
Partial Public Class TAREA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TAR_id_tarea As Integer
	
	Private _TAR_tiempo_estimado As String
	
	Private _TAR_tiempo_real As String
	
	Private _COL_id_colaborador As Integer
	
	Private _ORT_id_orden_trabajo As System.Nullable(Of Integer)
	
	Private _TAR_hora_fin As String
	
	Private _TAR_carga_horaria As String
	
	Private _TAR_detalle_tarea As String
	
	Private _TAR_observaciones As String
	
	Private _TAR_fecha As System.Nullable(Of Date)
	
	Private _COLABORADOR As EntityRef(Of COLABORADOR)
	
	Private _ORDEN_TRABAJO As EntityRef(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTAR_id_tareaChanging(value As Integer)
    End Sub
    Partial Private Sub OnTAR_id_tareaChanged()
    End Sub
    Partial Private Sub OnTAR_tiempo_estimadoChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_tiempo_estimadoChanged()
    End Sub
    Partial Private Sub OnTAR_tiempo_realChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_tiempo_realChanged()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As Integer)
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnTAR_hora_finChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_hora_finChanged()
    End Sub
    Partial Private Sub OnTAR_carga_horariaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_carga_horariaChanged()
    End Sub
    Partial Private Sub OnTAR_detalle_tareaChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_detalle_tareaChanged()
    End Sub
    Partial Private Sub OnTAR_observacionesChanging(value As String)
    End Sub
    Partial Private Sub OnTAR_observacionesChanged()
    End Sub
    Partial Private Sub OnTAR_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTAR_fechaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COLABORADOR = CType(Nothing, EntityRef(Of COLABORADOR))
		Me._ORDEN_TRABAJO = CType(Nothing, EntityRef(Of ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_id_tarea", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TAR_id_tarea() As Integer
		Get
			Return Me._TAR_id_tarea
		End Get
		Set
			If ((Me._TAR_id_tarea = value)  _
						= false) Then
				Me.OnTAR_id_tareaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_id_tarea = value
				Me.SendPropertyChanged("TAR_id_tarea")
				Me.OnTAR_id_tareaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_tiempo_estimado", DbType:="VarChar(10)")>  _
	Public Property TAR_tiempo_estimado() As String
		Get
			Return Me._TAR_tiempo_estimado
		End Get
		Set
			If (String.Equals(Me._TAR_tiempo_estimado, value) = false) Then
				Me.OnTAR_tiempo_estimadoChanging(value)
				Me.SendPropertyChanging
				Me._TAR_tiempo_estimado = value
				Me.SendPropertyChanged("TAR_tiempo_estimado")
				Me.OnTAR_tiempo_estimadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_tiempo_real", DbType:="VarChar(10)")>  _
	Public Property TAR_tiempo_real() As String
		Get
			Return Me._TAR_tiempo_real
		End Get
		Set
			If (String.Equals(Me._TAR_tiempo_real, value) = false) Then
				Me.OnTAR_tiempo_realChanging(value)
				Me.SendPropertyChanging
				Me._TAR_tiempo_real = value
				Me.SendPropertyChanged("TAR_tiempo_real")
				Me.OnTAR_tiempo_realChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", DbType:="Int NOT NULL")>  _
	Public Property COL_id_colaborador() As Integer
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If ((Me._COL_id_colaborador = value)  _
						= false) Then
				If Me._COLABORADOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="Int")>  _
	Public Property ORT_id_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (Me._ORT_id_orden_trabajo.Equals(value) = false) Then
				If Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_hora_fin", DbType:="VarChar(10)")>  _
	Public Property TAR_hora_fin() As String
		Get
			Return Me._TAR_hora_fin
		End Get
		Set
			If (String.Equals(Me._TAR_hora_fin, value) = false) Then
				Me.OnTAR_hora_finChanging(value)
				Me.SendPropertyChanging
				Me._TAR_hora_fin = value
				Me.SendPropertyChanged("TAR_hora_fin")
				Me.OnTAR_hora_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_carga_horaria", DbType:="VarChar(10)")>  _
	Public Property TAR_carga_horaria() As String
		Get
			Return Me._TAR_carga_horaria
		End Get
		Set
			If (String.Equals(Me._TAR_carga_horaria, value) = false) Then
				Me.OnTAR_carga_horariaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_carga_horaria = value
				Me.SendPropertyChanged("TAR_carga_horaria")
				Me.OnTAR_carga_horariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_detalle_tarea", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property TAR_detalle_tarea() As String
		Get
			Return Me._TAR_detalle_tarea
		End Get
		Set
			If (String.Equals(Me._TAR_detalle_tarea, value) = false) Then
				Me.OnTAR_detalle_tareaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_detalle_tarea = value
				Me.SendPropertyChanged("TAR_detalle_tarea")
				Me.OnTAR_detalle_tareaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_observaciones", DbType:="VarChar(200)")>  _
	Public Property TAR_observaciones() As String
		Get
			Return Me._TAR_observaciones
		End Get
		Set
			If (String.Equals(Me._TAR_observaciones, value) = false) Then
				Me.OnTAR_observacionesChanging(value)
				Me.SendPropertyChanging
				Me._TAR_observaciones = value
				Me.SendPropertyChanged("TAR_observaciones")
				Me.OnTAR_observacionesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAR_fecha", DbType:="Date")>  _
	Public Property TAR_fecha() As System.Nullable(Of Date)
		Get
			Return Me._TAR_fecha
		End Get
		Set
			If (Me._TAR_fecha.Equals(value) = false) Then
				Me.OnTAR_fechaChanging(value)
				Me.SendPropertyChanging
				Me._TAR_fecha = value
				Me.SendPropertyChanged("TAR_fecha")
				Me.OnTAR_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_TAREA", Storage:="_COLABORADOR", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador", IsForeignKey:=true)>  _
	Public Property COLABORADOR() As COLABORADOR
		Get
			Return Me._COLABORADOR.Entity
		End Get
		Set
			Dim previousValue As COLABORADOR = Me._COLABORADOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COLABORADOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COLABORADOR.Entity = Nothing
					previousValue.TAREA.Remove(Me)
				End If
				Me._COLABORADOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TAREA.Add(Me)
					Me._COL_id_colaborador = value.COL_id_colaborador
				Else
					Me._COL_id_colaborador = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("COLABORADOR")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_TAREA", Storage:="_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property ORDEN_TRABAJO() As ORDEN_TRABAJO
		Get
			Return Me._ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As ORDEN_TRABAJO = Me._ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ORDEN_TRABAJO.Entity = Nothing
					previousValue.TAREA.Remove(Me)
				End If
				Me._ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TAREA.Add(Me)
					Me._ORT_id_orden_trabajo = value.ORT_id_orden_trabajo
				Else
					Me._ORT_id_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.USUARIO")>  _
Partial Public Class USUARIO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _USU_id_usuario As Integer
	
	Private _USU_usuario As String
	
	Private _USU_contraseña As String
	
	Private _USU_perfil As String
	
	Private _COL_id_colaborador As System.Nullable(Of Integer)
	
	Private _COLABORADOR As EntityRef(Of COLABORADOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnUSU_id_usuarioChanged()
    End Sub
    Partial Private Sub OnUSU_usuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_usuarioChanged()
    End Sub
    Partial Private Sub OnUSU_contraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_contraseñaChanged()
    End Sub
    Partial Private Sub OnUSU_perfilChanging(value As String)
    End Sub
    Partial Private Sub OnUSU_perfilChanged()
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOL_id_colaboradorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COLABORADOR = CType(Nothing, EntityRef(Of COLABORADOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_id_usuario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property USU_id_usuario() As Integer
		Get
			Return Me._USU_id_usuario
		End Get
		Set
			If ((Me._USU_id_usuario = value)  _
						= false) Then
				Me.OnUSU_id_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_id_usuario = value
				Me.SendPropertyChanged("USU_id_usuario")
				Me.OnUSU_id_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_usuario", DbType:="VarChar(50)")>  _
	Public Property USU_usuario() As String
		Get
			Return Me._USU_usuario
		End Get
		Set
			If (String.Equals(Me._USU_usuario, value) = false) Then
				Me.OnUSU_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._USU_usuario = value
				Me.SendPropertyChanged("USU_usuario")
				Me.OnUSU_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_contraseña", DbType:="VarChar(50)")>  _
	Public Property USU_contraseña() As String
		Get
			Return Me._USU_contraseña
		End Get
		Set
			If (String.Equals(Me._USU_contraseña, value) = false) Then
				Me.OnUSU_contraseñaChanging(value)
				Me.SendPropertyChanging
				Me._USU_contraseña = value
				Me.SendPropertyChanged("USU_contraseña")
				Me.OnUSU_contraseñaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USU_perfil", DbType:="VarChar(15)")>  _
	Public Property USU_perfil() As String
		Get
			Return Me._USU_perfil
		End Get
		Set
			If (String.Equals(Me._USU_perfil, value) = false) Then
				Me.OnUSU_perfilChanging(value)
				Me.SendPropertyChanging
				Me._USU_perfil = value
				Me.SendPropertyChanged("USU_perfil")
				Me.OnUSU_perfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_id_colaborador", DbType:="Int")>  _
	Public Property COL_id_colaborador() As System.Nullable(Of Integer)
		Get
			Return Me._COL_id_colaborador
		End Get
		Set
			If (Me._COL_id_colaborador.Equals(value) = false) Then
				If Me._COLABORADOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCOL_id_colaboradorChanging(value)
				Me.SendPropertyChanging
				Me._COL_id_colaborador = value
				Me.SendPropertyChanged("COL_id_colaborador")
				Me.OnCOL_id_colaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COLABORADOR_USUARIO", Storage:="_COLABORADOR", ThisKey:="COL_id_colaborador", OtherKey:="COL_id_colaborador", IsForeignKey:=true)>  _
	Public Property COLABORADOR() As COLABORADOR
		Get
			Return Me._COLABORADOR.Entity
		End Get
		Set
			Dim previousValue As COLABORADOR = Me._COLABORADOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COLABORADOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COLABORADOR.Entity = Nothing
					previousValue.USUARIO.Remove(Me)
				End If
				Me._COLABORADOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.USUARIO.Add(Me)
					Me._COL_id_colaborador = value.COL_id_colaborador
				Else
					Me._COL_id_colaborador = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("COLABORADOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CLIENTE")>  _
Partial Public Class CLIENTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CLI_id_cliente As Integer
	
	Private _CLI_razon_social As String
	
	Private _CLI_mail_cli As String
	
	Private _CLI_telefono_cli As String
	
	Private _CLI_domicilio As String
	
	Private _CLI_localidad As String
	
	Private _CLI_codigo_postal As String
	
	Private _ORDEN_TRABAJO As EntitySet(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCLI_id_clienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLI_id_clienteChanged()
    End Sub
    Partial Private Sub OnCLI_razon_socialChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_razon_socialChanged()
    End Sub
    Partial Private Sub OnCLI_mail_cliChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_mail_cliChanged()
    End Sub
    Partial Private Sub OnCLI_telefono_cliChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_telefono_cliChanged()
    End Sub
    Partial Private Sub OnCLI_domicilioChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_domicilioChanged()
    End Sub
    Partial Private Sub OnCLI_localidadChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_localidadChanged()
    End Sub
    Partial Private Sub OnCLI_codigo_postalChanging(value As String)
    End Sub
    Partial Private Sub OnCLI_codigo_postalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ORDEN_TRABAJO = New EntitySet(Of ORDEN_TRABAJO)(AddressOf Me.attach_ORDEN_TRABAJO, AddressOf Me.detach_ORDEN_TRABAJO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_id_cliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CLI_id_cliente() As Integer
		Get
			Return Me._CLI_id_cliente
		End Get
		Set
			If ((Me._CLI_id_cliente = value)  _
						= false) Then
				Me.OnCLI_id_clienteChanging(value)
				Me.SendPropertyChanging
				Me._CLI_id_cliente = value
				Me.SendPropertyChanged("CLI_id_cliente")
				Me.OnCLI_id_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_razon_social", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CLI_razon_social() As String
		Get
			Return Me._CLI_razon_social
		End Get
		Set
			If (String.Equals(Me._CLI_razon_social, value) = false) Then
				Me.OnCLI_razon_socialChanging(value)
				Me.SendPropertyChanging
				Me._CLI_razon_social = value
				Me.SendPropertyChanged("CLI_razon_social")
				Me.OnCLI_razon_socialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_mail_cli", DbType:="VarChar(50)")>  _
	Public Property CLI_mail_cli() As String
		Get
			Return Me._CLI_mail_cli
		End Get
		Set
			If (String.Equals(Me._CLI_mail_cli, value) = false) Then
				Me.OnCLI_mail_cliChanging(value)
				Me.SendPropertyChanging
				Me._CLI_mail_cli = value
				Me.SendPropertyChanged("CLI_mail_cli")
				Me.OnCLI_mail_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_telefono_cli", DbType:="VarChar(15)")>  _
	Public Property CLI_telefono_cli() As String
		Get
			Return Me._CLI_telefono_cli
		End Get
		Set
			If (String.Equals(Me._CLI_telefono_cli, value) = false) Then
				Me.OnCLI_telefono_cliChanging(value)
				Me.SendPropertyChanging
				Me._CLI_telefono_cli = value
				Me.SendPropertyChanged("CLI_telefono_cli")
				Me.OnCLI_telefono_cliChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_domicilio", DbType:="VarChar(50)")>  _
	Public Property CLI_domicilio() As String
		Get
			Return Me._CLI_domicilio
		End Get
		Set
			If (String.Equals(Me._CLI_domicilio, value) = false) Then
				Me.OnCLI_domicilioChanging(value)
				Me.SendPropertyChanging
				Me._CLI_domicilio = value
				Me.SendPropertyChanged("CLI_domicilio")
				Me.OnCLI_domicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_localidad", DbType:="VarChar(50)")>  _
	Public Property CLI_localidad() As String
		Get
			Return Me._CLI_localidad
		End Get
		Set
			If (String.Equals(Me._CLI_localidad, value) = false) Then
				Me.OnCLI_localidadChanging(value)
				Me.SendPropertyChanging
				Me._CLI_localidad = value
				Me.SendPropertyChanged("CLI_localidad")
				Me.OnCLI_localidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_codigo_postal", DbType:="VarChar(10)")>  _
	Public Property CLI_codigo_postal() As String
		Get
			Return Me._CLI_codigo_postal
		End Get
		Set
			If (String.Equals(Me._CLI_codigo_postal, value) = false) Then
				Me.OnCLI_codigo_postalChanging(value)
				Me.SendPropertyChanging
				Me._CLI_codigo_postal = value
				Me.SendPropertyChanged("CLI_codigo_postal")
				Me.OnCLI_codigo_postalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CLIENTE_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="CLI_id_cliente", OtherKey:="CLI_id_cliente")>  _
	Public Property ORDEN_TRABAJO() As EntitySet(Of ORDEN_TRABAJO)
		Get
			Return Me._ORDEN_TRABAJO
		End Get
		Set
			Me._ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.CLIENTE = Me
	End Sub
	
	Private Sub detach_ORDEN_TRABAJO(ByVal entity As ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.CLIENTE = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DETALLE_ORDEN_TRABAJO")>  _
Partial Public Class DETALLE_ORDEN_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_detalle_orden_trabajo As Integer
	
	Private _DOT_cantidad_dot As System.Nullable(Of Integer)
	
	Private _DOT_tamaño_dot As String
	
	Private _DOT_tipo_impresion_dot As String
	
	Private _DOT_papel_soporte_1 As String
	
	Private _DOT_papel_soporte_2 As String
	
	Private _DOT_papel_soporte_3 As String
	
	Private _DOT_gramaje_soporte_1 As String
	
	Private _DOT_gramaje_soporte_2 As String
	
	Private _DOT_gramaje_soporte_3 As String
	
	Private _DOT_cantidad_soporte_1 As System.Nullable(Of Integer)
	
	Private _DOT_cantidad_soporte_2 As System.Nullable(Of Integer)
	
	Private _DOT_cantidad_soporte_3 As System.Nullable(Of Integer)
	
	Private _DOT_formato_soporte_1 As String
	
	Private _DOT_formato_soporte_2 As String
	
	Private _DOT_formato_soporte_3 As String
	
	Private _PIE_id_pieza As Integer
	
	Private _ORT_id_orden_trabajo As System.Nullable(Of Integer)
	
	Private _RE_TRABAJO As EntitySet(Of RE_TRABAJO)
	
	Private _PROCESO As EntitySet(Of PROCESO)
	
	Private _PIEZA As EntityRef(Of PIEZA)
	
	Private _ORDEN_TRABAJO As EntityRef(Of ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnDOT_cantidad_dotChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_dotChanged()
    End Sub
    Partial Private Sub OnDOT_tamaño_dotChanging(value As String)
    End Sub
    Partial Private Sub OnDOT_tamaño_dotChanged()
    End Sub
    Partial Private Sub OnDOT_tipo_impresion_dotChanging(value As String)
    End Sub
    Partial Private Sub OnDOT_tipo_impresion_dotChanged()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_papel_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_papel_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_gramaje_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOT_cantidad_soporte_3Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_1Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_1Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_2Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_2Changed()
    End Sub
    Partial Private Sub OnDOT_formato_soporte_3Changing(value As String)
    End Sub
    Partial Private Sub OnDOT_formato_soporte_3Changed()
    End Sub
    Partial Private Sub OnPIE_id_piezaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIE_id_piezaChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RE_TRABAJO = New EntitySet(Of RE_TRABAJO)(AddressOf Me.attach_RE_TRABAJO, AddressOf Me.detach_RE_TRABAJO)
		Me._PROCESO = New EntitySet(Of PROCESO)(AddressOf Me.attach_PROCESO, AddressOf Me.detach_PROCESO)
		Me._PIEZA = CType(Nothing, EntityRef(Of PIEZA))
		Me._ORDEN_TRABAJO = CType(Nothing, EntityRef(Of ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_detalle_orden_trabajo() As Integer
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If ((Me._id_detalle_orden_trabajo = value)  _
						= false) Then
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_dot", DbType:="Int")>  _
	Public Property DOT_cantidad_dot() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_dot
		End Get
		Set
			If (Me._DOT_cantidad_dot.Equals(value) = false) Then
				Me.OnDOT_cantidad_dotChanging(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_dot = value
				Me.SendPropertyChanged("DOT_cantidad_dot")
				Me.OnDOT_cantidad_dotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_tamaño_dot", DbType:="VarChar(50)")>  _
	Public Property DOT_tamaño_dot() As String
		Get
			Return Me._DOT_tamaño_dot
		End Get
		Set
			If (String.Equals(Me._DOT_tamaño_dot, value) = false) Then
				Me.OnDOT_tamaño_dotChanging(value)
				Me.SendPropertyChanging
				Me._DOT_tamaño_dot = value
				Me.SendPropertyChanged("DOT_tamaño_dot")
				Me.OnDOT_tamaño_dotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_tipo_impresion_dot", DbType:="VarChar(4)")>  _
	Public Property DOT_tipo_impresion_dot() As String
		Get
			Return Me._DOT_tipo_impresion_dot
		End Get
		Set
			If (String.Equals(Me._DOT_tipo_impresion_dot, value) = false) Then
				Me.OnDOT_tipo_impresion_dotChanging(value)
				Me.SendPropertyChanging
				Me._DOT_tipo_impresion_dot = value
				Me.SendPropertyChanged("DOT_tipo_impresion_dot")
				Me.OnDOT_tipo_impresion_dotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_1", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_1() As String
		Get
			Return Me._DOT_papel_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_1, value) = false) Then
				Me.OnDOT_papel_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_1 = value
				Me.SendPropertyChanged("DOT_papel_soporte_1")
				Me.OnDOT_papel_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_2", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_2() As String
		Get
			Return Me._DOT_papel_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_2, value) = false) Then
				Me.OnDOT_papel_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_2 = value
				Me.SendPropertyChanged("DOT_papel_soporte_2")
				Me.OnDOT_papel_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_papel_soporte_3", DbType:="VarChar(50)")>  _
	Public Property DOT_papel_soporte_3() As String
		Get
			Return Me._DOT_papel_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_papel_soporte_3, value) = false) Then
				Me.OnDOT_papel_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_papel_soporte_3 = value
				Me.SendPropertyChanged("DOT_papel_soporte_3")
				Me.OnDOT_papel_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_1", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_1() As String
		Get
			Return Me._DOT_gramaje_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_1, value) = false) Then
				Me.OnDOT_gramaje_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_1 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_1")
				Me.OnDOT_gramaje_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_2", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_2() As String
		Get
			Return Me._DOT_gramaje_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_2, value) = false) Then
				Me.OnDOT_gramaje_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_2 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_2")
				Me.OnDOT_gramaje_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_gramaje_soporte_3", DbType:="VarChar(10)")>  _
	Public Property DOT_gramaje_soporte_3() As String
		Get
			Return Me._DOT_gramaje_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_gramaje_soporte_3, value) = false) Then
				Me.OnDOT_gramaje_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_gramaje_soporte_3 = value
				Me.SendPropertyChanged("DOT_gramaje_soporte_3")
				Me.OnDOT_gramaje_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_1", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_1() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_1
		End Get
		Set
			If (Me._DOT_cantidad_soporte_1.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_1 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_1")
				Me.OnDOT_cantidad_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_2", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_2() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_2
		End Get
		Set
			If (Me._DOT_cantidad_soporte_2.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_2 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_2")
				Me.OnDOT_cantidad_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_cantidad_soporte_3", DbType:="Int")>  _
	Public Property DOT_cantidad_soporte_3() As System.Nullable(Of Integer)
		Get
			Return Me._DOT_cantidad_soporte_3
		End Get
		Set
			If (Me._DOT_cantidad_soporte_3.Equals(value) = false) Then
				Me.OnDOT_cantidad_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_cantidad_soporte_3 = value
				Me.SendPropertyChanged("DOT_cantidad_soporte_3")
				Me.OnDOT_cantidad_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_1", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_1() As String
		Get
			Return Me._DOT_formato_soporte_1
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_1, value) = false) Then
				Me.OnDOT_formato_soporte_1Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_1 = value
				Me.SendPropertyChanged("DOT_formato_soporte_1")
				Me.OnDOT_formato_soporte_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_2", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_2() As String
		Get
			Return Me._DOT_formato_soporte_2
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_2, value) = false) Then
				Me.OnDOT_formato_soporte_2Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_2 = value
				Me.SendPropertyChanged("DOT_formato_soporte_2")
				Me.OnDOT_formato_soporte_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOT_formato_soporte_3", DbType:="VarChar(15)")>  _
	Public Property DOT_formato_soporte_3() As String
		Get
			Return Me._DOT_formato_soporte_3
		End Get
		Set
			If (String.Equals(Me._DOT_formato_soporte_3, value) = false) Then
				Me.OnDOT_formato_soporte_3Changing(value)
				Me.SendPropertyChanging
				Me._DOT_formato_soporte_3 = value
				Me.SendPropertyChanged("DOT_formato_soporte_3")
				Me.OnDOT_formato_soporte_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIE_id_pieza", DbType:="Int NOT NULL")>  _
	Public Property PIE_id_pieza() As Integer
		Get
			Return Me._PIE_id_pieza
		End Get
		Set
			If ((Me._PIE_id_pieza = value)  _
						= false) Then
				If Me._PIEZA.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPIE_id_piezaChanging(value)
				Me.SendPropertyChanging
				Me._PIE_id_pieza = value
				Me.SendPropertyChanged("PIE_id_pieza")
				Me.OnPIE_id_piezaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="Int")>  _
	Public Property ORT_id_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (Me._ORT_id_orden_trabajo.Equals(value) = false) Then
				If Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_RE_TRABAJO", Storage:="_RE_TRABAJO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo")>  _
	Public Property RE_TRABAJO() As EntitySet(Of RE_TRABAJO)
		Get
			Return Me._RE_TRABAJO
		End Get
		Set
			Me._RE_TRABAJO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_PROCESO", Storage:="_PROCESO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo")>  _
	Public Property PROCESO() As EntitySet(Of PROCESO)
		Get
			Return Me._PROCESO
		End Get
		Set
			Me._PROCESO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PIEZA_DETALLE_ORDEN_TRABAJO", Storage:="_PIEZA", ThisKey:="PIE_id_pieza", OtherKey:="PIE_id_pieza", IsForeignKey:=true)>  _
	Public Property PIEZA() As PIEZA
		Get
			Return Me._PIEZA.Entity
		End Get
		Set
			Dim previousValue As PIEZA = Me._PIEZA.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PIEZA.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PIEZA.Entity = Nothing
					previousValue.DETALLE_ORDEN_TRABAJO.Remove(Me)
				End If
				Me._PIEZA.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DETALLE_ORDEN_TRABAJO.Add(Me)
					Me._PIE_id_pieza = value.PIE_id_pieza
				Else
					Me._PIE_id_pieza = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("PIEZA")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DETALLE_ORDEN_TRABAJO", Storage:="_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property ORDEN_TRABAJO() As ORDEN_TRABAJO
		Get
			Return Me._ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As ORDEN_TRABAJO = Me._ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ORDEN_TRABAJO.Entity = Nothing
					previousValue.DETALLE_ORDEN_TRABAJO.Remove(Me)
				End If
				Me._ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DETALLE_ORDEN_TRABAJO.Add(Me)
					Me._ORT_id_orden_trabajo = value.ORT_id_orden_trabajo
				Else
					Me._ORT_id_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RE_TRABAJO(ByVal entity As RE_TRABAJO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_RE_TRABAJO(ByVal entity As RE_TRABAJO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Nothing
	End Sub
	
	Private Sub attach_PROCESO(ByVal entity As PROCESO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_PROCESO(ByVal entity As PROCESO)
		Me.SendPropertyChanging
		entity.DETALLE_ORDEN_TRABAJO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRODUCTO")>  _
Partial Public Class PRODUCTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROD_id As Integer
	
	Private _PROD_codigo As String
	
	Private _PROD_descripcion As String
	
	Private _PROD_stock As Integer
	
	Private _PROD_stock_minimo As System.Nullable(Of Integer)
	
	Private _PRODUCTO_MOVIMIENTO As EntitySet(Of PRODUCTO_MOVIMIENTO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROD_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_idChanged()
    End Sub
    Partial Private Sub OnPROD_codigoChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_codigoChanged()
    End Sub
    Partial Private Sub OnPROD_descripcionChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_descripcionChanged()
    End Sub
    Partial Private Sub OnPROD_stockChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_stockChanged()
    End Sub
    Partial Private Sub OnPROD_stock_minimoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROD_stock_minimoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PRODUCTO_MOVIMIENTO = New EntitySet(Of PRODUCTO_MOVIMIENTO)(AddressOf Me.attach_PRODUCTO_MOVIMIENTO, AddressOf Me.detach_PRODUCTO_MOVIMIENTO)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROD_id() As Integer
		Get
			Return Me._PROD_id
		End Get
		Set
			If ((Me._PROD_id = value)  _
						= false) Then
				Me.OnPROD_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_id = value
				Me.SendPropertyChanged("PROD_id")
				Me.OnPROD_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_codigo", DbType:="VarChar(15)")>  _
	Public Property PROD_codigo() As String
		Get
			Return Me._PROD_codigo
		End Get
		Set
			If (String.Equals(Me._PROD_codigo, value) = false) Then
				Me.OnPROD_codigoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_codigo = value
				Me.SendPropertyChanged("PROD_codigo")
				Me.OnPROD_codigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PROD_descripcion() As String
		Get
			Return Me._PROD_descripcion
		End Get
		Set
			If (String.Equals(Me._PROD_descripcion, value) = false) Then
				Me.OnPROD_descripcionChanging(value)
				Me.SendPropertyChanging
				Me._PROD_descripcion = value
				Me.SendPropertyChanged("PROD_descripcion")
				Me.OnPROD_descripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_stock", DbType:="Int NOT NULL")>  _
	Public Property PROD_stock() As Integer
		Get
			Return Me._PROD_stock
		End Get
		Set
			If ((Me._PROD_stock = value)  _
						= false) Then
				Me.OnPROD_stockChanging(value)
				Me.SendPropertyChanging
				Me._PROD_stock = value
				Me.SendPropertyChanged("PROD_stock")
				Me.OnPROD_stockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_stock_minimo", DbType:="Int")>  _
	Public Property PROD_stock_minimo() As System.Nullable(Of Integer)
		Get
			Return Me._PROD_stock_minimo
		End Get
		Set
			If (Me._PROD_stock_minimo.Equals(value) = false) Then
				Me.OnPROD_stock_minimoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_stock_minimo = value
				Me.SendPropertyChanged("PROD_stock_minimo")
				Me.OnPROD_stock_minimoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRODUCTO_PRODUCTO_MOVIMIENTO", Storage:="_PRODUCTO_MOVIMIENTO", ThisKey:="PROD_id", OtherKey:="PROD_id")>  _
	Public Property PRODUCTO_MOVIMIENTO() As EntitySet(Of PRODUCTO_MOVIMIENTO)
		Get
			Return Me._PRODUCTO_MOVIMIENTO
		End Get
		Set
			Me._PRODUCTO_MOVIMIENTO.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_PRODUCTO_MOVIMIENTO(ByVal entity As PRODUCTO_MOVIMIENTO)
		Me.SendPropertyChanging
		entity.PRODUCTO = Me
	End Sub
	
	Private Sub detach_PRODUCTO_MOVIMIENTO(ByVal entity As PRODUCTO_MOVIMIENTO)
		Me.SendPropertyChanging
		entity.PRODUCTO = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PRODUCTO_MOVIMIENTO")>  _
Partial Public Class PRODUCTO_MOVIMIENTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROD_MOV_id As Integer
	
	Private _PROD_MOV_fecha As System.Nullable(Of Date)
	
	Private _ORT_id_orden_trabajo As String
	
	Private _PROD_MOV_tipo As String
	
	Private _PROD_MOV_cantidad As System.Nullable(Of Integer)
	
	Private _PROD_id As Integer
	
	Private _PRODUCTO As EntityRef(Of PRODUCTO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROD_MOV_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_MOV_idChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_fechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPROD_MOV_fechaChanged()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As String)
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_tipoChanging(value As String)
    End Sub
    Partial Private Sub OnPROD_MOV_tipoChanged()
    End Sub
    Partial Private Sub OnPROD_MOV_cantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROD_MOV_cantidadChanged()
    End Sub
    Partial Private Sub OnPROD_idChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROD_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PRODUCTO = CType(Nothing, EntityRef(Of PRODUCTO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROD_MOV_id() As Integer
		Get
			Return Me._PROD_MOV_id
		End Get
		Set
			If ((Me._PROD_MOV_id = value)  _
						= false) Then
				Me.OnPROD_MOV_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_id = value
				Me.SendPropertyChanged("PROD_MOV_id")
				Me.OnPROD_MOV_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_fecha", DbType:="Date")>  _
	Public Property PROD_MOV_fecha() As System.Nullable(Of Date)
		Get
			Return Me._PROD_MOV_fecha
		End Get
		Set
			If (Me._PROD_MOV_fecha.Equals(value) = false) Then
				Me.OnPROD_MOV_fechaChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_fecha = value
				Me.SendPropertyChanged("PROD_MOV_fecha")
				Me.OnPROD_MOV_fechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", DbType:="VarChar(15)")>  _
	Public Property ORT_id_orden_trabajo() As String
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If (String.Equals(Me._ORT_id_orden_trabajo, value) = false) Then
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_tipo", DbType:="VarChar(15)")>  _
	Public Property PROD_MOV_tipo() As String
		Get
			Return Me._PROD_MOV_tipo
		End Get
		Set
			If (String.Equals(Me._PROD_MOV_tipo, value) = false) Then
				Me.OnPROD_MOV_tipoChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_tipo = value
				Me.SendPropertyChanged("PROD_MOV_tipo")
				Me.OnPROD_MOV_tipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_MOV_cantidad", DbType:="Int")>  _
	Public Property PROD_MOV_cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._PROD_MOV_cantidad
		End Get
		Set
			If (Me._PROD_MOV_cantidad.Equals(value) = false) Then
				Me.OnPROD_MOV_cantidadChanging(value)
				Me.SendPropertyChanging
				Me._PROD_MOV_cantidad = value
				Me.SendPropertyChanged("PROD_MOV_cantidad")
				Me.OnPROD_MOV_cantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROD_id", DbType:="Int NOT NULL")>  _
	Public Property PROD_id() As Integer
		Get
			Return Me._PROD_id
		End Get
		Set
			If ((Me._PROD_id = value)  _
						= false) Then
				If Me._PRODUCTO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnPROD_idChanging(value)
				Me.SendPropertyChanging
				Me._PROD_id = value
				Me.SendPropertyChanged("PROD_id")
				Me.OnPROD_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRODUCTO_PRODUCTO_MOVIMIENTO", Storage:="_PRODUCTO", ThisKey:="PROD_id", OtherKey:="PROD_id", IsForeignKey:=true)>  _
	Public Property PRODUCTO() As PRODUCTO
		Get
			Return Me._PRODUCTO.Entity
		End Get
		Set
			Dim previousValue As PRODUCTO = Me._PRODUCTO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PRODUCTO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PRODUCTO.Entity = Nothing
					previousValue.PRODUCTO_MOVIMIENTO.Remove(Me)
				End If
				Me._PRODUCTO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PRODUCTO_MOVIMIENTO.Add(Me)
					Me._PROD_id = value.PROD_id
				Else
					Me._PROD_id = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("PRODUCTO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROCESO")>  _
Partial Public Class PROCESO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PROC_id_proceso As Integer
	
	Private _id_detalle_orden_trabajo As System.Nullable(Of Integer)
	
	Private _PROC_offset As String
	
	Private _PROC_descrip_offset As String
	
	Private _PROC_digital As String
	
	Private _PROC_descrip_digital As String
	
	Private _PROC_gran_formato As String
	
	Private _PROC_descrip_gran_formato As String
	
	Private _PROC_terminacion As String
	
	Private _PROC_descrip_terminacion As String
	
	Private _PROC_logistica As String
	
	Private _PROC_descrip_logistica As String
	
	Private _DETALLE_ORDEN_TRABAJO As EntityRef(Of DETALLE_ORDEN_TRABAJO)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPROC_id_procesoChanging(value As Integer)
    End Sub
    Partial Private Sub OnPROC_id_procesoChanged()
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_detalle_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnPROC_offsetChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_offsetChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_offsetChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_offsetChanged()
    End Sub
    Partial Private Sub OnPROC_digitalChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_digitalChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_digitalChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_digitalChanged()
    End Sub
    Partial Private Sub OnPROC_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_gran_formatoChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_gran_formatoChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_gran_formatoChanged()
    End Sub
    Partial Private Sub OnPROC_terminacionChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_terminacionChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_terminacionChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_terminacionChanged()
    End Sub
    Partial Private Sub OnPROC_logisticaChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_logisticaChanged()
    End Sub
    Partial Private Sub OnPROC_descrip_logisticaChanging(value As String)
    End Sub
    Partial Private Sub OnPROC_descrip_logisticaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._DETALLE_ORDEN_TRABAJO = CType(Nothing, EntityRef(Of DETALLE_ORDEN_TRABAJO))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_id_proceso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PROC_id_proceso() As Integer
		Get
			Return Me._PROC_id_proceso
		End Get
		Set
			If ((Me._PROC_id_proceso = value)  _
						= false) Then
				Me.OnPROC_id_procesoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_id_proceso = value
				Me.SendPropertyChanged("PROC_id_proceso")
				Me.OnPROC_id_procesoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_detalle_orden_trabajo", DbType:="Int")>  _
	Public Property id_detalle_orden_trabajo() As System.Nullable(Of Integer)
		Get
			Return Me._id_detalle_orden_trabajo
		End Get
		Set
			If (Me._id_detalle_orden_trabajo.Equals(value) = false) Then
				If Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_detalle_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._id_detalle_orden_trabajo = value
				Me.SendPropertyChanged("id_detalle_orden_trabajo")
				Me.Onid_detalle_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_offset", DbType:="VarChar(20)")>  _
	Public Property PROC_offset() As String
		Get
			Return Me._PROC_offset
		End Get
		Set
			If (String.Equals(Me._PROC_offset, value) = false) Then
				Me.OnPROC_offsetChanging(value)
				Me.SendPropertyChanging
				Me._PROC_offset = value
				Me.SendPropertyChanged("PROC_offset")
				Me.OnPROC_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_offset", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_offset() As String
		Get
			Return Me._PROC_descrip_offset
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_offset, value) = false) Then
				Me.OnPROC_descrip_offsetChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_offset = value
				Me.SendPropertyChanged("PROC_descrip_offset")
				Me.OnPROC_descrip_offsetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_digital", DbType:="VarChar(20)")>  _
	Public Property PROC_digital() As String
		Get
			Return Me._PROC_digital
		End Get
		Set
			If (String.Equals(Me._PROC_digital, value) = false) Then
				Me.OnPROC_digitalChanging(value)
				Me.SendPropertyChanging
				Me._PROC_digital = value
				Me.SendPropertyChanged("PROC_digital")
				Me.OnPROC_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_digital", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_digital() As String
		Get
			Return Me._PROC_descrip_digital
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_digital, value) = false) Then
				Me.OnPROC_descrip_digitalChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_digital = value
				Me.SendPropertyChanged("PROC_descrip_digital")
				Me.OnPROC_descrip_digitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_gran_formato", DbType:="VarChar(50)")>  _
	Public Property PROC_gran_formato() As String
		Get
			Return Me._PROC_gran_formato
		End Get
		Set
			If (String.Equals(Me._PROC_gran_formato, value) = false) Then
				Me.OnPROC_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_gran_formato = value
				Me.SendPropertyChanged("PROC_gran_formato")
				Me.OnPROC_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_gran_formato", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_gran_formato() As String
		Get
			Return Me._PROC_descrip_gran_formato
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_gran_formato, value) = false) Then
				Me.OnPROC_descrip_gran_formatoChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_gran_formato = value
				Me.SendPropertyChanged("PROC_descrip_gran_formato")
				Me.OnPROC_descrip_gran_formatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_terminacion", DbType:="VarChar(50)")>  _
	Public Property PROC_terminacion() As String
		Get
			Return Me._PROC_terminacion
		End Get
		Set
			If (String.Equals(Me._PROC_terminacion, value) = false) Then
				Me.OnPROC_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._PROC_terminacion = value
				Me.SendPropertyChanged("PROC_terminacion")
				Me.OnPROC_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_terminacion", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_terminacion() As String
		Get
			Return Me._PROC_descrip_terminacion
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_terminacion, value) = false) Then
				Me.OnPROC_descrip_terminacionChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_terminacion = value
				Me.SendPropertyChanged("PROC_descrip_terminacion")
				Me.OnPROC_descrip_terminacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_logistica", DbType:="VarChar(50)")>  _
	Public Property PROC_logistica() As String
		Get
			Return Me._PROC_logistica
		End Get
		Set
			If (String.Equals(Me._PROC_logistica, value) = false) Then
				Me.OnPROC_logisticaChanging(value)
				Me.SendPropertyChanging
				Me._PROC_logistica = value
				Me.SendPropertyChanged("PROC_logistica")
				Me.OnPROC_logisticaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROC_descrip_logistica", DbType:="VarChar(250)")>  _
	Public Property PROC_descrip_logistica() As String
		Get
			Return Me._PROC_descrip_logistica
		End Get
		Set
			If (String.Equals(Me._PROC_descrip_logistica, value) = false) Then
				Me.OnPROC_descrip_logisticaChanging(value)
				Me.SendPropertyChanging
				Me._PROC_descrip_logistica = value
				Me.SendPropertyChanged("PROC_descrip_logistica")
				Me.OnPROC_descrip_logisticaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="DETALLE_ORDEN_TRABAJO_PROCESO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="id_detalle_orden_trabajo", OtherKey:="id_detalle_orden_trabajo", IsForeignKey:=true, DeleteRule:="CASCADE")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As DETALLE_ORDEN_TRABAJO
		Get
			Return Me._DETALLE_ORDEN_TRABAJO.Entity
		End Get
		Set
			Dim previousValue As DETALLE_ORDEN_TRABAJO = Me._DETALLE_ORDEN_TRABAJO.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._DETALLE_ORDEN_TRABAJO.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._DETALLE_ORDEN_TRABAJO.Entity = Nothing
					previousValue.PROCESO.Remove(Me)
				End If
				Me._DETALLE_ORDEN_TRABAJO.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PROCESO.Add(Me)
					Me._id_detalle_orden_trabajo = value.id_detalle_orden_trabajo
				Else
					Me._id_detalle_orden_trabajo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("DETALLE_ORDEN_TRABAJO")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ORDEN_TRABAJO")>  _
Partial Public Class ORDEN_TRABAJO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ORT_id_orden_trabajo As Integer
	
	Private _ORT_fecha_ot As Date
	
	Private _ORT_tipo_ot As String
	
	Private _ORT_numero_ot As String
	
	Private _ORT_observaciones_ot As String
	
	Private _ORT_mejoras_ot As String
	
	Private _VEN_id_vendedor As Integer
	
	Private _CLI_id_cliente As Integer
	
	Private _ORT_fecha_entrega As System.Nullable(Of Date)
	
	Private _TAREA As EntitySet(Of TAREA)
	
	Private _DETALLE_ORDEN_TRABAJO As EntitySet(Of DETALLE_ORDEN_TRABAJO)
	
	Private _CLIENTE As EntityRef(Of CLIENTE)
	
	Private _VENDEDOR As EntityRef(Of VENDEDOR)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanging(value As Integer)
    End Sub
    Partial Private Sub OnORT_id_orden_trabajoChanged()
    End Sub
    Partial Private Sub OnORT_fecha_otChanging(value As Date)
    End Sub
    Partial Private Sub OnORT_fecha_otChanged()
    End Sub
    Partial Private Sub OnORT_tipo_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_tipo_otChanged()
    End Sub
    Partial Private Sub OnORT_numero_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_numero_otChanged()
    End Sub
    Partial Private Sub OnORT_observaciones_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_observaciones_otChanged()
    End Sub
    Partial Private Sub OnORT_mejoras_otChanging(value As String)
    End Sub
    Partial Private Sub OnORT_mejoras_otChanged()
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanging(value As Integer)
    End Sub
    Partial Private Sub OnVEN_id_vendedorChanged()
    End Sub
    Partial Private Sub OnCLI_id_clienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnCLI_id_clienteChanged()
    End Sub
    Partial Private Sub OnORT_fecha_entregaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnORT_fecha_entregaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TAREA = New EntitySet(Of TAREA)(AddressOf Me.attach_TAREA, AddressOf Me.detach_TAREA)
		Me._DETALLE_ORDEN_TRABAJO = New EntitySet(Of DETALLE_ORDEN_TRABAJO)(AddressOf Me.attach_DETALLE_ORDEN_TRABAJO, AddressOf Me.detach_DETALLE_ORDEN_TRABAJO)
		Me._CLIENTE = CType(Nothing, EntityRef(Of CLIENTE))
		Me._VENDEDOR = CType(Nothing, EntityRef(Of VENDEDOR))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_id_orden_trabajo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ORT_id_orden_trabajo() As Integer
		Get
			Return Me._ORT_id_orden_trabajo
		End Get
		Set
			If ((Me._ORT_id_orden_trabajo = value)  _
						= false) Then
				Me.OnORT_id_orden_trabajoChanging(value)
				Me.SendPropertyChanging
				Me._ORT_id_orden_trabajo = value
				Me.SendPropertyChanged("ORT_id_orden_trabajo")
				Me.OnORT_id_orden_trabajoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_fecha_ot", DbType:="Date NOT NULL")>  _
	Public Property ORT_fecha_ot() As Date
		Get
			Return Me._ORT_fecha_ot
		End Get
		Set
			If ((Me._ORT_fecha_ot = value)  _
						= false) Then
				Me.OnORT_fecha_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_fecha_ot = value
				Me.SendPropertyChanged("ORT_fecha_ot")
				Me.OnORT_fecha_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_tipo_ot", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ORT_tipo_ot() As String
		Get
			Return Me._ORT_tipo_ot
		End Get
		Set
			If (String.Equals(Me._ORT_tipo_ot, value) = false) Then
				Me.OnORT_tipo_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_tipo_ot = value
				Me.SendPropertyChanged("ORT_tipo_ot")
				Me.OnORT_tipo_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_numero_ot", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property ORT_numero_ot() As String
		Get
			Return Me._ORT_numero_ot
		End Get
		Set
			If (String.Equals(Me._ORT_numero_ot, value) = false) Then
				Me.OnORT_numero_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_numero_ot = value
				Me.SendPropertyChanged("ORT_numero_ot")
				Me.OnORT_numero_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_observaciones_ot", DbType:="VarChar(250)")>  _
	Public Property ORT_observaciones_ot() As String
		Get
			Return Me._ORT_observaciones_ot
		End Get
		Set
			If (String.Equals(Me._ORT_observaciones_ot, value) = false) Then
				Me.OnORT_observaciones_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_observaciones_ot = value
				Me.SendPropertyChanged("ORT_observaciones_ot")
				Me.OnORT_observaciones_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_mejoras_ot", DbType:="VarChar(250)")>  _
	Public Property ORT_mejoras_ot() As String
		Get
			Return Me._ORT_mejoras_ot
		End Get
		Set
			If (String.Equals(Me._ORT_mejoras_ot, value) = false) Then
				Me.OnORT_mejoras_otChanging(value)
				Me.SendPropertyChanging
				Me._ORT_mejoras_ot = value
				Me.SendPropertyChanged("ORT_mejoras_ot")
				Me.OnORT_mejoras_otChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VEN_id_vendedor", DbType:="Int NOT NULL")>  _
	Public Property VEN_id_vendedor() As Integer
		Get
			Return Me._VEN_id_vendedor
		End Get
		Set
			If ((Me._VEN_id_vendedor = value)  _
						= false) Then
				If Me._VENDEDOR.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVEN_id_vendedorChanging(value)
				Me.SendPropertyChanging
				Me._VEN_id_vendedor = value
				Me.SendPropertyChanged("VEN_id_vendedor")
				Me.OnVEN_id_vendedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLI_id_cliente", DbType:="Int NOT NULL")>  _
	Public Property CLI_id_cliente() As Integer
		Get
			Return Me._CLI_id_cliente
		End Get
		Set
			If ((Me._CLI_id_cliente = value)  _
						= false) Then
				If Me._CLIENTE.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCLI_id_clienteChanging(value)
				Me.SendPropertyChanging
				Me._CLI_id_cliente = value
				Me.SendPropertyChanged("CLI_id_cliente")
				Me.OnCLI_id_clienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORT_fecha_entrega", DbType:="Date")>  _
	Public Property ORT_fecha_entrega() As System.Nullable(Of Date)
		Get
			Return Me._ORT_fecha_entrega
		End Get
		Set
			If (Me._ORT_fecha_entrega.Equals(value) = false) Then
				Me.OnORT_fecha_entregaChanging(value)
				Me.SendPropertyChanging
				Me._ORT_fecha_entrega = value
				Me.SendPropertyChanged("ORT_fecha_entrega")
				Me.OnORT_fecha_entregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_TAREA", Storage:="_TAREA", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo")>  _
	Public Property TAREA() As EntitySet(Of TAREA)
		Get
			Return Me._TAREA
		End Get
		Set
			Me._TAREA.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ORDEN_TRABAJO_DETALLE_ORDEN_TRABAJO", Storage:="_DETALLE_ORDEN_TRABAJO", ThisKey:="ORT_id_orden_trabajo", OtherKey:="ORT_id_orden_trabajo")>  _
	Public Property DETALLE_ORDEN_TRABAJO() As EntitySet(Of DETALLE_ORDEN_TRABAJO)
		Get
			Return Me._DETALLE_ORDEN_TRABAJO
		End Get
		Set
			Me._DETALLE_ORDEN_TRABAJO.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CLIENTE_ORDEN_TRABAJO", Storage:="_CLIENTE", ThisKey:="CLI_id_cliente", OtherKey:="CLI_id_cliente", IsForeignKey:=true)>  _
	Public Property CLIENTE() As CLIENTE
		Get
			Return Me._CLIENTE.Entity
		End Get
		Set
			Dim previousValue As CLIENTE = Me._CLIENTE.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CLIENTE.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CLIENTE.Entity = Nothing
					previousValue.ORDEN_TRABAJO.Remove(Me)
				End If
				Me._CLIENTE.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ORDEN_TRABAJO.Add(Me)
					Me._CLI_id_cliente = value.CLI_id_cliente
				Else
					Me._CLI_id_cliente = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("CLIENTE")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VENDEDOR_ORDEN_TRABAJO", Storage:="_VENDEDOR", ThisKey:="VEN_id_vendedor", OtherKey:="VEN_id_vendedor", IsForeignKey:=true)>  _
	Public Property VENDEDOR() As VENDEDOR
		Get
			Return Me._VENDEDOR.Entity
		End Get
		Set
			Dim previousValue As VENDEDOR = Me._VENDEDOR.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._VENDEDOR.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._VENDEDOR.Entity = Nothing
					previousValue.ORDEN_TRABAJO.Remove(Me)
				End If
				Me._VENDEDOR.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ORDEN_TRABAJO.Add(Me)
					Me._VEN_id_vendedor = value.VEN_id_vendedor
				Else
					Me._VEN_id_vendedor = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("VENDEDOR")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_TAREA(ByVal entity As TAREA)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Nothing
	End Sub
	
	Private Sub attach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Me
	End Sub
	
	Private Sub detach_DETALLE_ORDEN_TRABAJO(ByVal entity As DETALLE_ORDEN_TRABAJO)
		Me.SendPropertyChanging
		entity.ORDEN_TRABAJO = Nothing
	End Sub
End Class
